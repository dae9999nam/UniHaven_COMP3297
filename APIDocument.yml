openapi: 3.0.0
info:
  title: UniHaven API
  version: 1.0.0
  description: |
    REST API for UniHaven project, including accommodations, reservations, ratings, and authentication schemes.

servers:
  - url: /

security:
  - bearerAuth: []
  - sessionAuth: []

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: Token
    sessionAuth:
      type: apiKey
      in: cookie
      name: sessionid

  schemas:
    Accommodation:
      type: object
      required:
        - name
        - address
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
        address:
          type: string
        type:
          type: string
          description: Accommodation type (e.g. “Studio”, “Flat”)
        rental_period:
          type: string
          description: e.g. “Monthly”, “Term”
        number_of_beds:
          type: integer
        number_of_bedrooms:
          type: integer
        availability_status:
          type: string
          enum: [“Available”, “Occupied”]
        availability_startdate:
          type: string
          format: date
          nullable: true
        availability_enddate:
          type: string
          format: date
          nullable: true
        latitude:
          type: number
          format: float
        longitude:
          type: number
          format: float
        distance:
          type: number
          format: float
          nullable: true
          description: Meters from chosen campus destination
        uploaded_date:
          type: string
          format: date-time
        rating:
          type: number
          format: float
          nullable: true
          description: Average score 0–5
      additionalProperties: false

    Reservation:
      type: object
      required:
        - contact
        - accommodation
      properties:
        id:
          type: integer
          readOnly: true
        reservation_id:
          type: string
          format: uuid
        contact:
          type: string
          format: email
        accommodation:
          $ref: "#/components/schemas/Accommodation"
        status:
          type: string
          enum: [“Pending”, “Contract Signed”, “Cancelled”]
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      additionalProperties: false

    Rating:
      type: object
      required:
        - score
      properties:
        rating_id:
          type: integer
          readOnly: true
        accommodation:
          $ref: "#/components/schemas/Accommodation"
        score:
          type: integer
          minimum: 0
          maximum: 5
        comment:
          type: string
          nullable: true
        uploaded_date:
          type: string
          format: date-time
      additionalProperties: false

  parameters:
    accommodationPk:
      name: pk
      in: path
      required: true
      schema:
        type: integer
      description: Accommodation primary key
    reservationPk:
      name: pk
      in: path
      required: true
      schema:
        type: integer
      description: Reservation primary key

paths:
  /Accommodations/:
    get:
      summary: List all accommodations
      tags: [Accommodations]
      security:
        - bearerAuth: []
        - sessionAuth: []
      responses:
        "200":
          description: array of accommodations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Accommodation"

  /Accommodations/create/:
    post:
      summary: Create a new accommodation
      tags: [Accommodations]
      security:
        - bearerAuth: []
        - sessionAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Accommodation"
      responses:
        "201":
          description: Accommodation created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Accommodation"
        "400":
          description: validation error

  /Accommodations/{pk}/:
    get:
      summary: Retrieve one accommodation
      tags: [Accommodations]
      parameters:
        - $ref: "#/components/parameters/accommodationPk"
      responses:
        "200":
          description: accommodation object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Accommodation"
        "404":
          description: not found
    put:
      summary: Update entire accommodation
      tags: [Accommodations]
      parameters:
        - $ref: "#/components/parameters/accommodationPk"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Accommodation"
      responses:
        "200":
          description: accommodation updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Accommodation"
        "400":
          description: validation error
        "404":
          description: not found
    patch:
      summary: Partially update accommodation
      tags: [Accommodations]
      parameters:
        - $ref: "#/components/parameters/accommodationPk"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name: { type: string }
                address: { type: string }
                availability_status: { type: string }
                availability_startdate: { type: string, format: date }
                availability_enddate: { type: string, format: date }
                distance: { type: number, format: float }
                rating: { type: number, format: float }
      responses:
        "200":
          description: accommodation partially updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Accommodation"
        "400":
          description: validation error
        "404":
          description: not found
    delete:
      summary: Delete an accommodation
      tags: [Accommodations]
      parameters:
        - $ref: "#/components/parameters/accommodationPk"
      responses:
        "204":
          description: deleted
        "404":
          description: not found

  /Accommodations/search/:
    get:
      summary: Search and filter accommodations
      tags: [Accommodations]
      parameters:
        - in: query
          name: type
          schema: { type: string }
        - in: query
          name: rental_period
          schema: { type: string }
        - in: query
          name: number_of_beds
          schema: { type: integer }
        - in: query
          name: number_of_bedrooms
          schema: { type: integer }
        - in: query
          name: availability_status
          schema: { type: string }
        - in: query
          name: search
          schema: { type: string }
          description: substring search on name/address
        - in: query
          name: ordering
          schema: { type: string, enum: [uploaded_date, -uploaded_date] }
      responses:
        "200":
          description: filtered list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Accommodation"
        "404":
          description: no matches

  /Accommodations/{pk}/distance/:
    get:
      summary: Compute distance from accommodation to a campus destination
      tags: [Accommodations]
      parameters:
        - $ref: "#/components/parameters/accommodationPk"
        - in: query
          name: destination
          schema: { type: string }
          description: one of Main_Campus,Sasson,Swire,Kadoorie_Centre,Faculty of Dentistry
      responses:
        "200":
          description: distance computed
          content:
            application/json:
              schema:
                type: object
                properties:
                  accommodation_id: { type: integer }
                  accommodation_coordinates:
                    type: object
                    properties:
                      latitude: { type: number }
                      longitude: { type: number }
                  destination: { type: string }
                  destination_coordinates:
                    type: object
                    properties:
                      latitude: { type: number }
                      longitude: { type: number }
                  distance_meters: { type: number }
        "400":
          description: missing/invalid destination
        "404":
          description: accommodation not found

  /Accommodations/{pk}/rating/:
    get:
      summary: Retrieve rating for an accommodation
      tags: [Ratings]
      parameters:
        - $ref: "#/components/parameters/accommodationPk"
      responses:
        "200":
          description: rating object or empty
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Rating"
        "404":
          description: none exists
    put:
      summary: Update an existing rating
      tags: [Ratings]
      parameters:
        - $ref: "#/components/parameters/accommodationPk"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Rating"
      responses:
        "200":
          description: rating updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Rating"
        "400":
          description: validation error
    delete:
      summary: Delete a rating
      tags: [Ratings]
      parameters:
        - $ref: "#/components/parameters/accommodationPk"
      responses:
        "204":
          description: deleted
        "404":
          description: none exists

  /Accommodations/{pk}/rating/create/:
    post:
      summary: Create a new rating for an accommodation
      tags: [Ratings]
      parameters:
        - $ref: "#/components/parameters/accommodationPk"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [score]
              properties:
                score: { type: integer, minimum: 0, maximum: 5 }
                comment: { type: string }
      responses:
        "201":
          description: rating created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Rating"
        "400":
          description: validation error or already exists

  /reservations/:
    get:
      summary: List all reservations
      tags: [Reservations]
      security:
        - bearerAuth: []
        - sessionAuth: []
      responses:
        "200":
          description: array of reservations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Reservation"

  /reservations/create:
    post:
      summary: Create a new reservation
      tags: [Reservations]
      security:
        - bearerAuth: []
        - sessionAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [contact, accommodation]
              properties:
                contact: { type: string, format: email }
                accommodation: { type: integer }
                start_date: { type: string, format: date }
                end_date: { type: string, format: date }
      responses:
        "201":
          description: reservation created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Reservation"
        "400":
          description: validation error (e.g. signed contract exists)

  /reservations/modify/{pk}:
    put:
      summary: Modify a reservation
      tags: [Reservations]
      security:
        - bearerAuth: []
        - sessionAuth: []
      parameters:
        - $ref: "#/components/parameters/reservationPk"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Reservation"
      responses:
        "200":
          description: reservation updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Reservation"
        "404":
          description: not found
    patch:
      summary: Partially modify a reservation
      tags: [Reservations]
      security:
        - bearerAuth: []
        - sessionAuth: []
      parameters:
        - $ref: "#/components/parameters/reservationPk"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status: { type: string }
      responses:
        "200":
          description: reservation partially updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Reservation"
        "404":
          description: not found

  /reservations/cancel/{pk}:
    patch:
      summary: Cancel a reservation
      tags: [Reservations]
      security:
        - bearerAuth: []
        - sessionAuth: []
      parameters:
        - $ref: "#/components/parameters/reservationPk"
      responses:
        "200":
          description: reservation cancelled
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Reservation"
        "404":
          description: not found

  /reservations/{pk}/accommodation:
    get:
      summary: View reserved accommodation detail
      tags: [Reservations]
      security:
        - bearerAuth: []
        - sessionAuth: []
      parameters:
        - $ref: "#/components/parameters/reservationPk"
      responses:
        "200":
          description: accommodation for reservation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Accommodation"
        "404":
          description: reservation not found
